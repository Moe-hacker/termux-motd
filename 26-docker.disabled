#!/data/data/com.termux/files/usr/bin/bash
if [[ $(sudo pidof dockerd) = "" ]];then
    sudo rm /data/docker/run/docker.sock > /dev/null
    sudo rm /data/docker/run/docker.pid > /dev/null
#删除注释以自动挂载cgroupfs，在作者本人的设备上不需要此操作
#    sudo mount -t tmpfs -o mode=755 tmpfs /sys/fs/cgroup
#    sudo mkdir -p /sys/fs/cgroup/devices
#    sudo mount -t cgroup -o devices cgroup /sys/fs/cgroup/devices
    sleep 0.5s
    START_DOCKERD=$(sudo dockerd -l fatal 2>&1 &) &
    sleep 2s
#删除注释以使用普通用户调用docker，强烈不建议这么做
#    sudo setenforce 0
#    sudo chown $(whoami) /data/docker/run/docker.sock
fi
# set column width
COLUMNS=2
# colors
green="\e[1;32m"
red="\e[1;31m"
undim="\e[0m"

mapfile -t containers < <(sudo docker ps -a --format '{{.Names}}\t{{.Status}}' | sort -k1 | awk '{ print $1,$2 }')

out=""
for i in "${!containers[@]}"; do
    IFS=" " read name status <<< ${containers[i]}
    # color green if service is active, else red
    if [[ "${status}" == "Up" ]]; then
        out+="\e[1;36m${name},: ${green}${status,,}${undim},\n"
    else
        out+="\e[1;36m${name},: ${red}${status,,}${undim},\n"
    fi
    # insert \n every $COLUMNS column
    if [ $((($i+1) % $COLUMNS)) -eq 0 ]; then
        out+="\n"
    fi
done
out+="\n"

#这段加的简直就是比着葫芦画瓢
mapfile -t images < <(sudo docker image ls -a --format '{{.Repository}}\t{{.Tag}}' | sort -k1 | awk '{ print $1,$2 }')

out1=""
for i in "${!images[@]}"; do
    IFS1=" " read repository tag <<< ${images[i]}
    # color green if service is active, else red
    out1+="\e[1;36m${repository},: ${green}${tag,,}${undim},\n"
    # insert \n every $COLUMNS column
    if [ $((($i+1) % $COLUMNS)) -eq 0 ]; then
        out1+="\n"
    fi
done
out+="\n"
printf "\033[1m\nDocker Container Status:\n"
printf "$out" | column -ts $',' | sed -e 's/^/  /'
printf "\033[1m\nDocker Images:\n"
printf "$out1" | column -ts $',' | sed -e 's/^/  /'
